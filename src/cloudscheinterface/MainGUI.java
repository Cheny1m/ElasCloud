/**
 * User Interface for Cloudsche and open the template in the editor.
 *
 * @author Minxian
 *
 */
package cloudscheinterface;

import com.datacenter.DataCenter;
import com.datacenter.Rack;
import java.awt.Color;
import java.io.File;
import java.io.FileOutputStream;
import java.io.PrintWriter;
import java.util.ArrayList;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.DefaultListModel;
import javax.swing.JCheckBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumn;
import javax.xml.parsers.DocumentBuilder;
import javax.xml.parsers.DocumentBuilderFactory;
import javax.xml.transform.OutputKeys;
import javax.xml.transform.Transformer;
import javax.xml.transform.TransformerFactory;
import javax.xml.transform.dom.DOMSource;
import javax.xml.transform.stream.StreamResult;
import org.w3c.dom.Document;
import org.w3c.dom.Element;
import org.w3c.dom.NodeList;

/**
 *
 * @author LukeXu
 */
public class MainGUI extends javax.swing.JFrame {

    private static final long serialVersionUID = 1L;

    /**
     * Creates new form MainGUI
     */
    public MainGUI() {
        super("FlexCloud");
        initComponents();

        jPanel1.removeAll();
        
        //Algorithm Type
        buttonGroup1.add(jRadioButton1);
        buttonGroup1.add(jRadioButton2);
        buttonGroup1.add(jRadioButton3);
        buttonGroup1.add(jRadioButton4);
        
        //Indices for comparison-loadbalance
        arrIndexjCheckBoxs.add(jCheckBox1);
        arrIndexjCheckBoxs.add(jCheckBox2);
        arrIndexjCheckBoxs.add(jCheckBox3);
        arrIndexjCheckBoxs.add(jCheckBox4);
        arrIndexjCheckBoxs.add(jCheckBox5);
        arrIndexjCheckBoxs.add(jCheckBox6);
        //Indices for comparison-energysaving
        arrIndexjCheckBoxs.add(jCheckBox11);
        arrIndexjCheckBoxs.add(jCheckBox12);
        arrIndexjCheckBoxs.add(jCheckBox13);

        //Algorithm
        arrAlgorithmCheckBoxs.add(jCheckBox7);
        arrAlgorithmCheckBoxs.add(jCheckBox8);
        arrAlgorithmCheckBoxs.add(jCheckBox9);
        arrAlgorithmCheckBoxs.add(jCheckBox10);
        arrAlgorithmCheckBoxs.add(jCheckBox14);
        arrAlgorithmCheckBoxs.add(jCheckBox15);
        //添加Prepartition(CMP,K=4),LPT,MIG算法
        arrAlgorithmCheckBoxs.add(jCheckBox16);
        arrAlgorithmCheckBoxs.add(jCheckBox17);
        arrAlgorithmCheckBoxs.add(jCheckBox18);
        //VM request 
        arrJTextFields.add(jTextField4);
        arrJTextFields.add(jTextField7);
        arrJTextFields.add(jTextField8);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings({"unchecked", "serial"})
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButton5 = new javax.swing.JButton();
        buttonGroup1 = new javax.swing.ButtonGroup();
        jMenu3 = new javax.swing.JMenu();
        jMenu4 = new javax.swing.JMenu();
        jPanel4 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jTextField4 = new javax.swing.JTextField();
        jTextField7 = new javax.swing.JTextField();
        jTextField8 = new javax.swing.JTextField();
        jButton12 = new javax.swing.JButton();
        jButton13 = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton10 = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        jCheckBox1 = new javax.swing.JCheckBox();
        jCheckBox2 = new javax.swing.JCheckBox();
        jCheckBox3 = new javax.swing.JCheckBox();
        jCheckBox4 = new javax.swing.JCheckBox();
        jCheckBox5 = new javax.swing.JCheckBox();
        jCheckBox6 = new javax.swing.JCheckBox();
        jButton14 = new javax.swing.JButton();
        jButton15 = new javax.swing.JButton();
        jCheckBox11 = new javax.swing.JCheckBox();
        jCheckBox12 = new javax.swing.JCheckBox();
        jCheckBox13 = new javax.swing.JCheckBox();
        jButton11 = new javax.swing.JButton();
        jPanel6 = new javax.swing.JPanel();
        jCheckBox7 = new javax.swing.JCheckBox();
        jCheckBox8 = new javax.swing.JCheckBox();
        jCheckBox9 = new javax.swing.JCheckBox();
        jButton16 = new javax.swing.JButton();
        jButton17 = new javax.swing.JButton();
        jCheckBox10 = new javax.swing.JCheckBox();
        jCheckBox14 = new javax.swing.JCheckBox();
        jCheckBox15 = new javax.swing.JCheckBox();
        jCheckBox16 = new javax.swing.JCheckBox();
        jCheckBox17 = new javax.swing.JCheckBox();
        jCheckBox18 = new javax.swing.JCheckBox();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();
        jScrollPane4 = new javax.swing.JScrollPane();
        jTextArea3 = new javax.swing.JTextArea();
        jScrollPane5 = new javax.swing.JScrollPane();
        jTextArea4 = new javax.swing.JTextArea();
        jPanel3 = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();
        jMenuItem4 = new javax.swing.JMenuItem();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItem6 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem5 = new javax.swing.JMenuItem();
        jMenuItem7 = new javax.swing.JMenuItem();
        jMenu5 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenuItem2 = new javax.swing.JMenuItem();

        jButton5.setText("jButton5");

        jMenu3.setText("jMenu3");

        jMenu4.setText("jMenu4");

        jPanel4.setToolTipText("Configure VM Properties");

        jLabel9.setFont(new java.awt.Font("宋体", 0, 14));
        jLabel9.setText("Starting Time");

        jLabel7.setFont(new java.awt.Font("宋体", 0, 14));
        jLabel7.setText("Average Duaration");

        jLabel8.setFont(new java.awt.Font("宋体", 0, 14));
        jLabel8.setText("VM Number");

        jTextField4.setFont(new java.awt.Font("宋体", 0, 14));
        jTextField4.setText("50");
        jTextField4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField4ActionPerformed(evt);
            }
        });

        jTextField7.setFont(new java.awt.Font("宋体", 0, 14));
        jTextField7.setText("100");

        jTextField8.setText("100");
        jTextField8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField8ActionPerformed(evt);
            }
        });

        jButton12.setText("Submit");
        jButton12.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton12ActionPerformed(evt);
            }
        });

        jButton13.setText("Reset");
        jButton13.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton13ActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("宋体", 0, 14));
        jLabel1.setText("VM Distribution");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "UniformDistri", "PoissonDistri", "NormalDistri" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addGap(10, 10, 10)
                                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel9)
                                        .addGap(28, 28, 28))
                                    .addGroup(jPanel4Layout.createSequentialGroup()
                                        .addComponent(jLabel8)
                                        .addGap(52, 52, 52)))
                                .addGap(8, 8, 8))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel4Layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel7)
                                .addGap(18, 18, 18)))
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jTextField7, javax.swing.GroupLayout.DEFAULT_SIZE, 42, Short.MAX_VALUE)
                            .addComponent(jTextField4)
                            .addComponent(jTextField8)))
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jButton12)
                                .addGap(18, 18, 18)
                                .addComponent(jButton13)
                                .addGap(0, 63, Short.MAX_VALUE))
                            .addGroup(jPanel4Layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel9)
                    .addComponent(jTextField4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(19, 19, 19)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jTextField7, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8)
                    .addComponent(jTextField8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 17, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton12)
                    .addComponent(jButton13))
                .addContainerGap())
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(new javax.swing.BoxLayout(getContentPane(), javax.swing.BoxLayout.LINE_AXIS));

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Settings", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 0, 18))); // NOI18N
        jPanel1.setPreferredSize(new java.awt.Dimension(375, 482));

        jRadioButton1.setFont(new java.awt.Font("宋体", 0, 14));
        jRadioButton1.setText("OnlineLoadbalance");
        jRadioButton1.setToolTipText("Select algorithm type");
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton2.setFont(new java.awt.Font("宋体", 0, 14));
        jRadioButton2.setText("OfflineLoadbalance");
        jRadioButton2.setToolTipText("Select algorithm type");
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "PM Type", "CPU/GHz", "Memoty/GB", "Storage/GB"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setToolTipText("Configure PM Specification");
        jScrollPane1.setViewportView(jTable1);

        jButton10.setFont(new java.awt.Font("宋体", 0, 14));
        jButton10.setText("Submit");
        jButton10.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton10ActionPerformed(evt);
            }
        });

        jPanel5.setToolTipText("Select Compared Indices");
        jPanel5.setFont(new java.awt.Font("宋体", 0, 14));

        jCheckBox1.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox1.setSelected(true);
        jCheckBox1.setText("AverageUtility");

        jCheckBox2.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox2.setText("ImbalanceDegree");

        jCheckBox3.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox3.setText("Makespan");

        jCheckBox4.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox4.setText("SkewOfMakespan");

        jCheckBox5.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox5.setText("Capacity-makespan");

        jCheckBox6.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox6.setText("SkewOfCapacity-makespan");

        jButton14.setFont(new java.awt.Font("宋体", 0, 14));
        jButton14.setText("Submit");
        jButton14.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton14ActionPerformed(evt);
            }
        });

        jButton15.setFont(new java.awt.Font("宋体", 0, 14));
        jButton15.setText("Reset");
        jButton15.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton15ActionPerformed(evt);
            }
        });

        jCheckBox11.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox11.setText("PMTurnedOn");

        jCheckBox12.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox12.setText("EnergyConsumption");

        jCheckBox13.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox13.setText("RejectedNumber");

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox13)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox1)
                            .addComponent(jCheckBox3))
                        .addGap(10, 10, 10)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox5)
                            .addComponent(jCheckBox2)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox4)
                            .addComponent(jCheckBox11))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox12)
                            .addComponent(jCheckBox6)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGap(66, 66, 66)
                        .addComponent(jButton14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton15)))
                .addGap(0, 6, Short.MAX_VALUE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox1)
                    .addComponent(jCheckBox2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox3)
                    .addComponent(jCheckBox5))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox4)
                    .addComponent(jCheckBox6))
                .addGap(6, 6, 6)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox11)
                    .addComponent(jCheckBox12))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jCheckBox13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton14)
                    .addComponent(jButton15)))
        );

        jButton11.setFont(new java.awt.Font("宋体", 0, 14));
        jButton11.setText("Reset");
        jButton11.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton11ActionPerformed(evt);
            }
        });

        jPanel6.setToolTipText("Select compared algorithm");

        jCheckBox7.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox7.setText("Random");
        jCheckBox7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox7ActionPerformed(evt);
            }
        });

        jCheckBox8.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox8.setText("DRS");

        jCheckBox9.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox9.setText("SAE");

        jButton16.setFont(new java.awt.Font("宋体", 0, 14));
        jButton16.setText("Submit");
        jButton16.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton16ActionPerformed(evt);
            }
        });

        jButton17.setFont(new java.awt.Font("宋体", 0, 14));
        jButton17.setText("Reset");
        jButton17.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton17ActionPerformed(evt);
            }
        });

        jCheckBox10.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox10.setText("OLRSA");

        jCheckBox14.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox14.setText("IW");

        jCheckBox14.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox15.setText("EDF");
        
        jCheckBox16.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox16.setText("Prepartition,k=4");
        
        jCheckBox17.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox17.setText("LPT");
        
        jCheckBox18.setFont(new java.awt.Font("宋体", 0, 14));
        jCheckBox18.setText("MIG");
        

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGap(33, 33, 33)
                        .addComponent(jButton16))
                    .addGroup(jPanel6Layout.createSequentialGroup()
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBox7)
                            .addComponent(jCheckBox10)
                            .addComponent(jCheckBox16))
                        .addGap(24, 24, 24)
                        .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel6Layout.createSequentialGroup()
                                .addGap(53, 53, 53)
                                .addComponent(jButton17))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox8)
                                    .addComponent(jCheckBox14)
                                    .addComponent(jCheckBox17))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jCheckBox15)
                                    .addComponent(jCheckBox9)
                                    .addComponent(jCheckBox18))))))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox7)
                    .addComponent(jCheckBox8)
                    .addComponent(jCheckBox9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox10)
                    .addComponent(jCheckBox14)
                    .addComponent(jCheckBox15))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCheckBox16)
                    .addComponent(jCheckBox17)
                    .addComponent(jCheckBox18))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton16)
                    .addComponent(jButton17)))
        );

        jRadioButton3.setFont(new java.awt.Font("宋体", 0, 14));
        jRadioButton3.setText("OnlineEnergySaving");
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton4.setFont(new java.awt.Font("宋体", 0, 14));
        jRadioButton4.setText("OfflineEnergySaving");
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(85, 85, 85)
                .addComponent(jButton10)
                .addGap(33, 33, 33)
                .addComponent(jButton11)
                .addGap(0, 103, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton1)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton4))
                .addContainerGap(198, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 334, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(19, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton1)
                .addGap(10, 10, 10)
                .addComponent(jRadioButton2)
                .addGap(10, 10, 10)
                .addComponent(jRadioButton3)
                .addGap(9, 9, 9)
                .addComponent(jRadioButton4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 82, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 92, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton11)
                    .addComponent(jButton10))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        getContentPane().add(jPanel1);

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Selected", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 0, 18))); // NOI18N

        jLabel2.setFont(new java.awt.Font("宋体", 0, 14));
        jLabel2.setText("Algorithm Type");

        jTextField1.setEditable(false);
        jTextField1.setText("UnConfigured");

        jLabel3.setFont(new java.awt.Font("宋体", 0, 14));
        jLabel3.setText("PM Specification");

        jLabel4.setFont(new java.awt.Font("宋体", 0, 14));
        jLabel4.setText("VM Specification");

        jLabel5.setFont(new java.awt.Font("宋体", 0, 14));
        jLabel5.setText("Compared Algortihm");

        jLabel6.setFont(new java.awt.Font("宋体", 0, 14));
        jLabel6.setText("Compared Indices");

        jTextArea1.setEditable(false);
        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jTextArea1.setText("Unconfigured");
        jScrollPane2.setViewportView(jTextArea1);

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setRows(5);
        jTextArea2.setText("Unconfigured");
        jScrollPane3.setViewportView(jTextArea2);

        jTextArea3.setEditable(false);
        jTextArea3.setColumns(20);
        jTextArea3.setRows(5);
        jTextArea3.setText("Unconfigured");
        jScrollPane4.setViewportView(jTextArea3);

        jTextArea4.setEditable(false);
        jTextArea4.setColumns(20);
        jTextArea4.setRows(5);
        jTextArea4.setText("Unconfigured");
        jScrollPane5.setViewportView(jTextArea4);

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel5)
                            .addComponent(jLabel6))
                        .addGap(12, 53, Short.MAX_VALUE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField1, javax.swing.GroupLayout.DEFAULT_SIZE, 77, Short.MAX_VALUE))
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 179, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane5, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE)
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.DEFAULT_SIZE, 169, Short.MAX_VALUE))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 60, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(167, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel2);

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Choice", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("宋体", 0, 18))); // NOI18N
        jPanel3.setFont(new java.awt.Font("宋体", 0, 14));
        jPanel3.setPreferredSize(new java.awt.Dimension(250, 623));

        jButton1.setFont(new java.awt.Font("宋体", 0, 16));
        jButton1.setText("Select Algorithm Type");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setFont(new java.awt.Font("宋体", 0, 16));
        jButton2.setText("Set PM Specification");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setFont(new java.awt.Font("宋体", 0, 16));
        jButton3.setText("Set VM Requests");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("宋体", 0, 16));
        jButton4.setText("<html><p align = center>Select Algortihm <br>For Comparison</p></html>");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jButton6.setFont(new java.awt.Font("宋体", 0, 16));
        jButton6.setText("Draw Diagram");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });

        jButton8.setFont(new java.awt.Font("宋体", 0, 16));
        jButton8.setText("<html><p align = center>Select Indices<br> For Comparison</p></html>");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });

        jButton9.setFont(new java.awt.Font("宋体", 0, 16));
        jButton9.setText("Exit");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(jButton1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE)
                    .addComponent(jButton6, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 218, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, 75, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, 73, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton8, javax.swing.GroupLayout.DEFAULT_SIZE, 70, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton6, javax.swing.GroupLayout.DEFAULT_SIZE, 72, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(jButton9, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel3);

        jMenu1.setText("File");
        jMenu1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenu1ActionPerformed(evt);
            }
        });

        jMenuItem3.setText("Open");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        jMenuItem4.setText("Save");
        jMenuItem4.setEnabled(false);
        jMenuItem4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem4ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem4);
        jMenu1.add(jSeparator1);

        jMenuItem6.setText("Exit");
        jMenuItem6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem6ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItem5.setText("Set PM Xml");
        jMenuItem5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem5ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem5);

        jMenuItem7.setText("Set VM Xml");
        jMenuItem7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem7ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem7);

        jMenuBar1.add(jMenu2);

        jMenu5.setText("Help");

        jMenuItem1.setText("About");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem1);

        jMenuItem2.setText("AboutAuthor");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu5.add(jMenuItem2);

        jMenuBar1.add(jMenu5);

        setJMenuBar(jMenuBar1);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jButton9ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        jPanel1.removeAll();

        jPanel1.add(jRadioButton1);
        jPanel1.add(jRadioButton2);
        jPanel1.add(jRadioButton3);
        jPanel1.add(jRadioButton4);
        jTextField1.setText("Algorithm");

        jPanel1.validate();
        jPanel1.repaint();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
        jTextField1.setText(((JRadioButton) evt.getSource()).getText());
        jTextField1.setBackground(new Color(204, 204, 255));
        jButton1.setBackground(new Color(204, 204, 255));
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
        jTextField1.setText(((JRadioButton) evt.getSource()).getText());
        jTextField1.setBackground(new Color(204, 204, 255));
        jButton1.setBackground(new Color(204, 204, 255));
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        jPanel1.removeAll();
        jPanel1.add(jScrollPane1);

        jScrollPane1.setViewportView(jTable1);

        jTable1.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
        for (int i = 0; i < 3; i++) {
            TableColumn tc = jTable1.getColumnModel().getColumn(i);
            tc.setPreferredWidth(100);
        }

        tableContent.setPMSpecification(jTable1);

        jScrollPane1.validate();
        jScrollPane1.repaint();
        jPanel1.add(jButton10);
        jPanel1.add(jButton11);

        jPanel1.validate();
        jPanel1.repaint();

        DataCenterADDJFrame dcaj = new DataCenterADDJFrame();
        dcaj.jPanel1.setBounds(10, 40, 340, 200);
        jPanel1.add(dcaj.jPanel1);

        jPanel1.validate();
        jPanel1.repaint();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jTextField4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField4ActionPerformed

    private void jTextField8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField8ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField8ActionPerformed

    private void jButton10ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton10ActionPerformed
        // TODO add your handling code here:

        jTextArea2.setText("PM specification has been configured");
        jTextArea2.setBackground(new Color(204, 204, 255));
        jButton2.setBackground(new Color(204, 204, 255));

    }//GEN-LAST:event_jButton10ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        jPanel1.removeAll();
        NewJFrame.jPanel3.setBounds(10, 50, 320, 240);
        jPanel1.add(NewJFrame.jPanel3);

        jPanel4.setBounds(10, 300, 300, 200);
        jPanel1.add(jPanel4);

        jPanel1.validate();
        jPanel1.repaint();
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton12ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton12ActionPerformed
        // TODO add your handling code here:

        if (isNumber(jTextField4.getText())
                && isNumber(jTextField7.getText())
                && isNumber(jTextField8.getText())) {
            jTextArea1.setText("VM specification has been configured.");
            jTextArea1.setBackground(new Color(204, 204, 255));
            jButton3.setBackground(new Color(204, 204, 255));

            confVMSpec.setProperties("StartTime", jTextField4.getText());
            confVMSpec.setProperties("MinSpan", jTextField7.getText());
            confVMSpec.setProperties("RequestNum", jTextField8.getText());

        } else {
            JOptionPane.showMessageDialog(jPanel1, error_Mes, mes_Dialog, JOptionPane.ERROR_MESSAGE);
        }
        confController.setRequestsDistribution(jComboBox1.getSelectedItem().toString());
    }//GEN-LAST:event_jButton12ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        jPanel1.removeAll();
        jPanel5.setBounds(10, 50, 330, 200);
        if (jRadioButton1.getText().equals(jTextField1.getText())) {

            for (int index = 0; index < 6; index++) {
                arrIndexjCheckBoxs.get(index).setEnabled(true);
            }

            for (int index = 6; index < arrIndexjCheckBoxs.size(); index++) {
                arrIndexjCheckBoxs.get(index).setEnabled(false);
            }
        //添加offlineLoadBalance，onlineEnergySaving按钮提交反应--Indices for comparison
        } else if (jRadioButton2.getText().equals(jTextField1.getText())) {
        	
        	for (int index = 0; index < 6; index++) {
                arrIndexjCheckBoxs.get(index).setEnabled(true);
            }

            for (int index = 6; index < arrIndexjCheckBoxs.size(); index++) {
                arrIndexjCheckBoxs.get(index).setEnabled(false);
            }
        } else if (jRadioButton3.getText().equals(jTextField1.getText())) {
        	
        	for (int index = 0; index < 6; index++) {
                arrIndexjCheckBoxs.get(index).setEnabled(false);
            }

            for (int index = 6; index < arrIndexjCheckBoxs.size(); index++) {
                arrIndexjCheckBoxs.get(index).setEnabled(true);
            }
        } else {

            for (int index = 0; index < 6; index++) {
                arrIndexjCheckBoxs.get(index).setEnabled(false);
            }

            for (int index = 6; index < arrIndexjCheckBoxs.size(); index++) {
                arrIndexjCheckBoxs.get(index).setEnabled(true);
            }
        }
        jPanel1.add(jPanel5);
        jPanel1.validate();
        jPanel1.repaint();
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton14ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton14ActionPerformed
        // TODO add your handling code here:
        jTextArea4.setText("Compared indices has been selected");
        jTextArea4.setBackground(new Color(204, 204, 255));
        jButton8.setBackground(new Color(204, 204, 255));

        selectedIndices.removeAll(selectedIndices);
        for (int index = 0; index < arrIndexjCheckBoxs.size(); index++) {
            selectedIndices.add(arrIndexjCheckBoxs.get(index).isSelected());
        }

        confController.setSelectedIndices(selectedIndices);

    }//GEN-LAST:event_jButton14ActionPerformed

    private void jCheckBox7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox7ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jCheckBox7ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        jPanel1.removeAll();
        jPanel6.setBounds(10, 50, 330, 200);
        if (jRadioButton1.getText().equals(jTextField1.getText())) {

            for (int index = 0; index < 5; index++) {
                arrAlgorithmCheckBoxs.get(index).setEnabled(true);
            }

            for (int index = 5; index < arrAlgorithmCheckBoxs.size(); index++) {
                arrAlgorithmCheckBoxs.get(index).setEnabled(false);
            }
          //添加offlineLoadBalance，onlineEnergySaving按钮提交反应--Algorithm for comparison
        } else if (jRadioButton2.getText().equals(jTextField1.getText())) {
        	for (int index = 0; index < 5; index++) {
                arrAlgorithmCheckBoxs.get(index).setEnabled(false);
            }

            for (int index = 5; index < arrAlgorithmCheckBoxs.size(); index++) {
                arrAlgorithmCheckBoxs.get(index).setEnabled(true);
            }
        } else if (jRadioButton3.getText().equals(jTextField1.getText())) {
        	for (int index = 0; index < 5; index++) {
                arrAlgorithmCheckBoxs.get(index).setEnabled(true);
            }

            for (int index = 5; index < arrAlgorithmCheckBoxs.size(); index++) {
                arrAlgorithmCheckBoxs.get(index).setEnabled(false);
            }
        } else {

            for (int index = 0; index < 5; index++) {
                arrAlgorithmCheckBoxs.get(index).setEnabled(false);
            }

            for (int index = 5; index < arrAlgorithmCheckBoxs.size(); index++) {
                arrAlgorithmCheckBoxs.get(index).setEnabled(true);
            }
        }
        jPanel1.add(jPanel6);
        jPanel1.validate();
        jPanel1.repaint();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton16ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton16ActionPerformed
        // TODO add your handling code here:


        selectedAlgortihm.removeAll(selectedAlgortihm);
        for (int index = 0; index < arrAlgorithmCheckBoxs.size(); index++) {
            selectedAlgortihm.add(arrAlgorithmCheckBoxs.get(index).isSelected());
        }
        confController.confSelectedAlgorithm(selectedAlgortihm);

        jTextArea3.setText("Compared algortihm has been selected");
        jTextArea3.setBackground(new Color(204, 204, 255));
        jButton4.setBackground(new Color(204, 204, 255));
    }//GEN-LAST:event_jButton16ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        confController.run();
        jPanel1.removeAll();
        NewJFrame.jTabbedPane1.setBounds(10, 50, 330, 400);
        jPanel1.add(NewJFrame.jTabbedPane1);
        jPanel1.validate();
        jPanel1.repaint();
        NewJFrame.jTextArea1.setText(confController.getDataSetOutput());

        DefaultListModel dlm = new DefaultListModel();
        NewJFrame.jList1.setModel(dlm);
        for (String string : confController.getSelectedAlgorithms()) {
            dlm.addElement(string);
        }

        jPanel1.validate();
        jPanel1.repaint();

        //Enable the save simulation configuration menu item.
        jMenuItem4.setEnabled(true);

    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton15ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton15ActionPerformed
        // TODO add your handling code here:


        arrIndexjCheckBoxs.get(0).setSelected(true);
        for (int index = 1; index < arrIndexjCheckBoxs.size(); index++) {
            arrIndexjCheckBoxs.get(index).setSelected(false);
        }
    }//GEN-LAST:event_jButton15ActionPerformed

    private void jButton17ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton17ActionPerformed
        // TODO add your handling code here:
        //All algorithms are not selected initially
        for (int index = 0; index < arrAlgorithmCheckBoxs.size(); index++) {
            arrAlgorithmCheckBoxs.get(index).setSelected(false);
        }
    }//GEN-LAST:event_jButton17ActionPerformed

    private void jButton13ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton13ActionPerformed
        // TODO add your handling code here:
        arrVmSpec = confVMSpec.getVMSpec();

        for (int index = 0; index < arrJTextFields.size(); index++) {
            arrJTextFields.get(index).setText(String.valueOf(arrVmSpec.get(index)));
        }
    }//GEN-LAST:event_jButton13ActionPerformed

    private void jButton11ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton11ActionPerformed
        // TODO add your handling code here:
        tableContent.setPMSpecification(jTable1);
//        TableModel tableModel = jTable1.getModel();
//        tableModel.setValueAt(50, 0, 4);
//        tableModel.setValueAt(0, 1, 4);
//        tableModel.setValueAt(0, 2, 4);

    }//GEN-LAST:event_jButton11ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
        jTextField1.setText(((JRadioButton) evt.getSource()).getText());
        jTextField1.setBackground(new Color(204, 204, 255));
        jButton1.setBackground(new Color(204, 204, 255));
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
        jTextField1.setText(((JRadioButton) evt.getSource()).getText());
        jTextField1.setBackground(new Color(204, 204, 255));
        jButton1.setBackground(new Color(204, 204, 255));
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "FlexCloud is a simulator used to simulate the scheduling process"
                + " in cloud datacenter", "About", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        JOptionPane.showMessageDialog(null, "Minxian Xu is a postgraduate student of UESTC\n "
                + "email: xmxyt900@gmail.com", "About Author", JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    //Reference link: https://netbeans.org/kb/docs/java/gui-filechooser_zh_CN.html
    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser = new JFileChooser("Open");
        jFileChooser.setFileFilter(new MyCustomerFilter());
        int returnVal = jFileChooser.showOpenDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File opendedFile = jFileChooser.getSelectedFile();
            try {
                System.out.println("File is opended");
                openImportedFile(opendedFile);
                //Should be rewrote to IOException     
            } catch (Exception e) {
                System.out.println("Problem occures when accessing file" + opendedFile.getAbsolutePath());
            }

        } else {
            System.out.println("File access cancelled by user");
        }
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void openImportedFile(File filename) {
//        ss;
        NodeList nl, nlChildList;
        String nodeContent;
        try {
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();
            Document doc = builder.parse(filename);
            //Load algorithm type
            nl = doc.getElementsByTagName("AlgorithmType");
            nodeContent = nl.item(0).getTextContent().replaceAll("\\s", "");
            if (nodeContent.equals("") == false) {
                System.out.println(nodeContent);
                if (nodeContent.equals("OnlineLoadbalance")) {
                    jRadioButton1.setSelected(true);
                    jTextField1.setText(jRadioButton1.getText());
                } else if (nodeContent.equals("OfflineLoadbalance")) {
                    jRadioButton2.setSelected(true);
                    jTextField1.setText(jRadioButton2.getText());
                } else if (nodeContent.equals("OnlineEnergySaving")) {
                    jRadioButton3.setSelected(true);
                    jTextField1.setText(jRadioButton3.getText());
                } else {
                    jRadioButton4.setSelected(true);
                    jTextField1.setText(jRadioButton4.getText());
                }

                jTextField1.setBackground(new Color(204, 204, 255));
                jButton1.setBackground(new Color(204, 204, 255));
            }

            //Load number of each PM type
            nl = doc.getElementsByTagName("DataCenterInfo");
            nlChildList = nl.item(0).getChildNodes();

            DataCenterADDJFrame.arr_dc.removeAll(DataCenterADDJFrame.arr_dc);
            for (int index = 0; index < nlChildList.getLength(); index++) {
                NodeList nlChildList2 = nlChildList.item(index).getChildNodes();
                
                ArrayList<String> arr_str = new ArrayList<String>();
                ArrayList<Rack> arr_rack = new ArrayList<Rack>();
                for (int index2 = 0; index2 < nlChildList2.getLength(); index2++) {

                    nodeContent = nlChildList2.item(index2).getTextContent().replaceAll("\\s", "");
                    if (nodeContent.equals("") == false) {
                        System.out.println(nodeContent);
                        arr_str.add(nodeContent);
                    }
                }
                if (!arr_str.isEmpty()) {
                    DataCenter dc = new DataCenter(Integer.parseInt(arr_str.get(0)), Integer.parseInt(arr_str.get(4)));
                    arr_rack.add(new Rack(1, Integer.parseInt(arr_str.get(1)), Integer.parseInt(arr_str.get(2)), Integer.parseInt(arr_str.get(3)), 0));
                    dc.setArr_rack(arr_rack);
                    DataCenterADDJFrame.arr_dc.add(dc);
                }

            }
            System.out.println("DataSize:" + DataCenterADDJFrame.arr_dc.size());

//            tableContent.setPMNumOnPropertyFile(jTable1);
            jTextArea2.setText("PM specification has been configured");
            jTextArea2.setBackground(new Color(204, 204, 255));
            jButton2.setBackground(new Color(204, 204, 255));

            //Load VM specification
            nl = doc.getElementsByTagName("VMRequest");
            nlChildList = nl.item(0).getChildNodes();
            for (int index = 0, number = 0; index < nlChildList.getLength(); index++) {
                nodeContent = nlChildList.item(index).getTextContent().replaceAll("\\s", "");
                if (nodeContent.equals("") == false) {
                    System.out.println(nodeContent);
                    if (number == 3) {
                        jComboBox1.setSelectedItem(nodeContent);
                    } else {
                        arrJTextFields.get(number++).setText(nodeContent);
                    }
                }
            }

            jTextArea1.setText("VM specification has been configured.");
            jTextArea1.setBackground(new Color(204, 204, 255));
            jButton3.setBackground(new Color(204, 204, 255));
            confVMSpec.setProperties("StartTime", jTextField4.getText());
            confVMSpec.setProperties("MinSpan", jTextField7.getText());
            confVMSpec.setProperties("RequestNum", jTextField8.getText());
            confController.setRequestsDistribution(jComboBox1.getSelectedItem().toString());

            //Load selected algorithms
            nl = doc.getElementsByTagName("ComparedAlgorithm");
            nlChildList = nl.item(0).getChildNodes();
            for (int index = 0, number = 0; index < nlChildList.getLength(); index++) {
                nodeContent = nlChildList.item(index).getTextContent().replaceAll("\\s", "");
                if (nodeContent.equals("") == false) {
                    System.out.println(nodeContent);
                    arrAlgorithmCheckBoxs.get(number++).setSelected(nodeContent.equals("true"));
                }
            }

            selectedAlgortihm.removeAll(selectedAlgortihm);
            for (int index = 0; index < arrAlgorithmCheckBoxs.size(); index++) {
                selectedAlgortihm.add(arrAlgorithmCheckBoxs.get(index).isSelected());
            }
            confController.confSelectedAlgorithm(selectedAlgortihm);
            jTextArea3.setText("Compared algortihm has been selected");
            jTextArea3.setBackground(new Color(204, 204, 255));
            jButton4.setBackground(new Color(204, 204, 255));


            //Load selected indices
            nl = doc.getElementsByTagName("ComparedIndices");
            nlChildList = nl.item(0).getChildNodes();
            for (int index = 0, number = 0; index < nlChildList.getLength(); index++) {
                nodeContent = nlChildList.item(index).getTextContent().replaceAll("\\s", "");
                if (nodeContent.equals("") == false) {
                    System.out.println(nodeContent);
                    arrIndexjCheckBoxs.get(number++).setSelected(nodeContent.equals("true"));
                }
            }
            selectedIndices.removeAll(selectedIndices);
            for (int index = 0; index < arrIndexjCheckBoxs.size(); index++) {
                selectedIndices.add(arrIndexjCheckBoxs.get(index).isSelected());
            }

            confController.setSelectedIndices(selectedIndices);
            jTextArea4.setText("Compared inices has been selected");
            jTextArea4.setBackground(new Color(204, 204, 255));
            jButton8.setBackground(new Color(204, 204, 255));

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    private void jMenuItem5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem5ActionPerformed
        // TODO add your handling code here:
        new XmlPMConf().setVisible(true);
    }//GEN-LAST:event_jMenuItem5ActionPerformed

    private void jMenuItem7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem7ActionPerformed
        // TODO add your handling code here:
        new XmlVMConf().setVisible(true);
    }//GEN-LAST:event_jMenuItem7ActionPerformed

    private void jMenuItem4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem4ActionPerformed
        // TODO add your handling code here:
        JFileChooser jFileChooser = new JFileChooser("Save");
        jFileChooser.setFileFilter(new MyCustomerFilter());
        int returnVal = jFileChooser.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
            File savedFile =
                    new File(jFileChooser.getSelectedFile().getAbsoluteFile() + ".fc");

            System.out.println(savedFile.getAbsolutePath());
            try {
                System.out.println("File is opended");
                generateSavedFile(savedFile);
                //Should be rewrote to IOException     
            } catch (Exception e) {
                System.out.println("Problem accessing file" + savedFile.getAbsolutePath());
            }

        } else {
            System.out.println("File access cancelled by user");
        }

    }//GEN-LAST:event_jMenuItem4ActionPerformed

    //Refactor method called by above action performed method.
    private void generateSavedFile(File fileName) throws Exception {
        Document doc = null;
        Element root, root2, subRoot, subsubRoot;
        try {
            DocumentBuilderFactory factory = DocumentBuilderFactory.newInstance();
            DocumentBuilder builder = factory.newDocumentBuilder();
            doc = builder.newDocument();

        } catch (Exception e) {
            System.out.println("Exception:" + e);
        }
        root = doc.createElement("configuration");
        doc.appendChild(root);

        subRoot = doc.createElement("AlgorithmType");
        subRoot.setTextContent(getSelectedRatioButton().getText());
        root.appendChild(subRoot);

        DefaultTableModel dtm = (DefaultTableModel) DataCenterADDJFrame.jTable2.getModel();
        root2 = doc.createElement("DataCenterInfo");
        for (int row = 0; row < dtm.getRowCount(); row++) {

            subRoot = doc.createElement("DC");
            subsubRoot = doc.createElement("DC_NO");
            subsubRoot.setTextContent(String.valueOf(dtm.getValueAt(row, 0)));
            subRoot.appendChild(subsubRoot);
            subsubRoot = doc.createElement("int");
            subsubRoot.setTextContent(String.valueOf(dtm.getValueAt(row, 1)));
            subRoot.appendChild(subsubRoot);
            subsubRoot = doc.createElement("int");
            subsubRoot.setTextContent(String.valueOf(dtm.getValueAt(row, 2)));
            subRoot.appendChild(subsubRoot);
            subsubRoot = doc.createElement("int");
            subsubRoot.setTextContent(String.valueOf(dtm.getValueAt(row, 3)));
            subRoot.appendChild(subsubRoot);
            subsubRoot = doc.createElement("ResponseTime");//Sould be no Space
            subsubRoot.setTextContent(String.valueOf(dtm.getValueAt(row, 4)));
            subRoot.appendChild(subsubRoot);
            root2.appendChild(subRoot);
        }
        root.appendChild(root2);

        subRoot = doc.createElement("VMRequest");
        subsubRoot = doc.createElement("StartTime");
        subsubRoot.setTextContent(jTextField4.getText());
        subRoot.appendChild(subsubRoot);
        subsubRoot = doc.createElement("AverageDuartion");
        subsubRoot.setTextContent(jTextField7.getText());
        subRoot.appendChild(subsubRoot);
        subsubRoot = doc.createElement("VMNumber");
        subsubRoot.setTextContent(jTextField8.getText());
        subRoot.appendChild(subsubRoot);
        subsubRoot = doc.createElement("VMDistribution");
        subsubRoot.setTextContent(jComboBox1.getSelectedItem().toString());
        subRoot.appendChild(subsubRoot);
        root.appendChild(subRoot);

        subRoot = doc.createElement("ComparedAlgorithm");
        for (int index = 0; index < arrAlgorithmCheckBoxs.size(); index++) {
            subsubRoot = doc.createElement(arrAlgorithmCheckBoxs.get(index).getText());
            subsubRoot.setTextContent(String.valueOf(arrAlgorithmCheckBoxs.get(index).isSelected()));
            subRoot.appendChild(subsubRoot);
        }
        root.appendChild(subRoot);
        //Notice: XML element tag should not contain space or special characters
        subRoot = doc.createElement("ComparedIndices");
        for (int index = 0; index < arrIndexjCheckBoxs.size(); index++) {
            subsubRoot = doc.createElement(arrIndexjCheckBoxs.get(index).getText());
            subsubRoot.setTextContent(String.valueOf(arrIndexjCheckBoxs.get(index).isSelected()));
            subRoot.appendChild(subsubRoot);
        }
        root.appendChild(subRoot);

        TransformerFactory tf = TransformerFactory.newInstance();
        //Set the indent number as 4 in XML file
        tf.setAttribute("indent-number", 4);
        Transformer transformer = tf.newTransformer();
        DOMSource source = new DOMSource(doc);
        transformer.setOutputProperty(OutputKeys.ENCODING, "ISO-8859-1");
        transformer.setOutputProperty(OutputKeys.INDENT, "yes");
        PrintWriter pw = new PrintWriter(new FileOutputStream(fileName));
        StreamResult result = new StreamResult(pw);
        transformer.transform(source, result);
        System.out.println("Generating XML file successfully!");
        //Always remember to close the PrinterWriter
        pw.close();

    }

    private JRadioButton getSelectedRatioButton() {
        if (jRadioButton1.isSelected()) {
            return jRadioButton1;
        }
        if (jRadioButton2.isSelected()) {
            return jRadioButton2;
        }
        if (jRadioButton3.isSelected()) {
            return jRadioButton3;
        } else {
            return jRadioButton4;
        }
    }
    private void jMenu1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenu1ActionPerformed
        // TODO add your handling code here:
        jMenuItem3.setEnabled(false);
    }//GEN-LAST:event_jMenu1ActionPerformed

    private void jMenuItem6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem6ActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_jMenuItem6ActionPerformed

    public boolean isNumber(String str) {
        //Match positive numbers
        pattern = Pattern.compile("[1-9][0-9]*");
        match = pattern.matcher(str);
        if (match.matches() == false) {
            return false;
        } else {
            return true;
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MainGUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {

            @Override
            public void run() {
                new MainGUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton10;
    private javax.swing.JButton jButton11;
    private javax.swing.JButton jButton12;
    private javax.swing.JButton jButton13;
    private javax.swing.JButton jButton14;
    private javax.swing.JButton jButton15;
    private javax.swing.JButton jButton16;
    private javax.swing.JButton jButton17;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JCheckBox jCheckBox10;
    private javax.swing.JCheckBox jCheckBox11;
    private javax.swing.JCheckBox jCheckBox12;
    private javax.swing.JCheckBox jCheckBox13;
    private javax.swing.JCheckBox jCheckBox14;
    private javax.swing.JCheckBox jCheckBox15;
    private javax.swing.JCheckBox jCheckBox16;
    private javax.swing.JCheckBox jCheckBox17;
    private javax.swing.JCheckBox jCheckBox18;
    private javax.swing.JCheckBox jCheckBox2;
    private javax.swing.JCheckBox jCheckBox3;
    private javax.swing.JCheckBox jCheckBox4;
    private javax.swing.JCheckBox jCheckBox5;
    private javax.swing.JCheckBox jCheckBox6;
    private javax.swing.JCheckBox jCheckBox7;
    private javax.swing.JCheckBox jCheckBox8;
    private javax.swing.JCheckBox jCheckBox9;
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenu3;
    private javax.swing.JMenu jMenu4;
    private javax.swing.JMenu jMenu5;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JMenuItem jMenuItem4;
    private javax.swing.JMenuItem jMenuItem5;
    private javax.swing.JMenuItem jMenuItem6;
    private javax.swing.JMenuItem jMenuItem7;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTextArea jTextArea3;
    private javax.swing.JTextArea jTextArea4;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField4;
    private javax.swing.JTextField jTextField7;
    private javax.swing.JTextField jTextField8;
    // End of variables declaration//GEN-END:variables
    NewJFrame mewJFrame = new NewJFrame();
    ArrayList<JCheckBox> arrIndexjCheckBoxs = new ArrayList<JCheckBox>();
    ArrayList<JCheckBox> arrAlgorithmCheckBoxs = new ArrayList<JCheckBox>();
    ArrayList<JTextField> arrJTextFields = new ArrayList<JTextField>();
    TableContent tableContent = new TableContent();
    ConfVMSpec confVMSpec = new ConfVMSpec();
    ArrayList<Integer> arrVmSpec = new ArrayList<Integer>();
    ConfController confController = new ConfController();
    ArrayList<Boolean> selectedAlgortihm = new ArrayList<Boolean>();
    ArrayList<Boolean> selectedIndices = new ArrayList<Boolean>();
    Pattern pattern;
    Matcher match;
    private final String error_Mes = "Inputs should be positive integer";
    private final String mes_Dialog = "Illegal Inputs";
}
